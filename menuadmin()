#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

// Deklarasi fungsi-fungsi
int loginAdmin();
void menuAdmin();
void tambahKendaraan();
void lihatDataUser();
void lihatProgressKendaraan();
void UbahProgress();

// Definisi struktur untuk kendaraan
struct Kendaraan {
    char jenis[50];
    float harga;
    char jenisService[50];
};

// Definisi struktur untuk pesanan user
struct Pesanan {
    char username[50];
    char jenisKendaraan[50];
    char jenisService[50];
    float totalPembayaran;
    char progress[50];
};

int main();

// Fungsi login admin
int loginAdmin() {
    char username[50];
    char password[50];

    printf("Masukkan username admin: ");
    scanf("%s", username);
    printf("Masukkan password admin: ");
    scanf("%s", password);

    // Implementasi login admin di sini (sesuaikan dengan kebutuhan)
    // Return 1 jika berhasil, 0 jika gagal
    return 1; // Contoh selalu berhasil
}

// Fungsi menu admin
void menuAdmin() {
    int adminChoice;

    do {
        printf("\n========== MENU ADMIN ==========\n");
        printf("1. Tambah Kendaraan\n");
        printf("2. Lihat Data User/Pelanggan\n");
        printf("3. Lihat Progress Kendaraan\n");
        printf("4. Ubah Progress Cucian User\n");
        printf("5. Kembali ke Menu Utama\n");
        printf("Pilih menu: ");
        scanf("%d", &adminChoice);

        switch (adminChoice) {
            case 1:
                // Implementasi tambah kendaraan di sini
                tambahKendaraan();
                break;

            case 2:
                // Implementasi lihat data user/pelanggan di sini
                lihatDataUser();
                break;

            case 3:
                // Implementasi lihat progress kendaraan di sini
                lihatProgressKendaraan();
                break;

            case 4:
                // Implementasi ubah progress cucian user di sini
                UbahProgress();
                break;

            case 5:
                printf("Kembali ke Menu Utama.\n");
                break;

            default:
                printf("Pilihan tidak valid. Silakan coba lagi.\n");
        }

    } while (adminChoice != 5);
}

// Fungsi untuk menambahkan kendaraan
void tambahKendaraan() {
    FILE *fileKendaraan = fopen("kendaraan.dat", "ab");
    struct Kendaraan newKendaraan;

    printf("Masukkan jenis kendaraan: ");
    scanf("%s", newKendaraan.jenis);
    printf("Masukkan harga: ");
    scanf("%f", &newKendaraan.harga);
    printf("Masukkan jenis service: ");
    scanf("%s", newKendaraan.jenisService);

    fwrite(&newKendaraan, sizeof(struct Kendaraan), 1, fileKendaraan);

    fclose(fileKendaraan);
}

// Fungsi untuk melihat data user/pelanggan
void lihatDataUser() {
    FILE *fileUser = fopen("userdata.dat", "rb");
    struct Pesanan readUser;

    printf("\n========== DATA USER/PELANGGAN ==========\n");
    printf("%-20s %-15s %-20s %-20s %-20s\n", "Username", "Jenis Kendaraan", "Jenis Service", "Total Pembayaran", "Progress");

    while (fread(&readUser, sizeof(struct Pesanan), 1, fileUser) == 1) {
        printf("%-20s %-15s %-20s %-20.2f %-20s\n", readUser.username, readUser.jenisKendaraan, readUser.jenisService, readUser.totalPembayaran, readUser.progress);
    }

    fclose(fileUser);
}

// Fungsi untuk melihat  kendaraan
void lihatProgressKendaraan() {
    FILE *fileKendaraan = fopen("kendaraan.dat", "rb");
    struct Kendaraan readKendaraan;

    printf("\n========== Progress Cucian KENDARAAN ==========\n");
    printf("%-20s %-10s %-20s\n", "Jenis Kendaraan", "Harga", "Jenis Service");

    while (fread(&readKendaraan, sizeof(struct Kendaraan), 1, fileKendaraan) == 1) {
        printf("%-20s %-10.2f %-20s\n", readKendaraan.jenis, readKendaraan.harga, readKendaraan.jenisService);
    }

    fclose(fileKendaraan);
}

// Fungsi untuk mengubah progress cucian user
void UbahProgress() {
    FILE *fileUser = fopen("user.dat", "rb");
    struct Pesanan readUser;

    char targetUsername[50];

    printf("Masukkan username user yang ingin diubah progress: ");
    scanf("%s", targetUsername);

    int found = 0;

    while (fread(&readUser, sizeof(struct Pesanan), 1, fileUser) == 1) {
        if (strcmp(readUser.username, targetUsername) == 0) {
            found = 1;

            printf("Progress Cucian saat ini: %s\n", readUser.progress);

            // Ubah progress
            printf("Masukkan progress baru: ");
            scanf("%s", readUser.progress);

            fseek(fileUser, sizeof(struct Pesanan), SEEK_CUR);
            fwrite(&readUser, sizeof(struct Pesanan), 1, fileUser);

            printf("Progress Cucian berhasil diubah.\n");
            break;
        }
    }

    if (!found) {
        printf("User dengan username %s tidak ditemukan.\n", targetUsername);
    }

    fclose(fileUser);
}

// ...

int main() {
    int choice;

    while (1) {
        printf("\n========== APLIKASI D'WASH ==========\n");
        printf("1. Login Admin\n");
        printf("2. Lihat Data User/Pelanggan\n");
        printf("3. Kategori Kendaraan\n");
        printf("4. Lihat Progress cucian\n");
        printf("5. Kembali ke Menu Utama\n");
        printf("Pilih menu: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                if (loginAdmin()) {
                    menuAdmin();
                } else {
                    printf("Login admin gagal.\n");
                }
                break;

            case 2:
                lihatDataUser();
                break;

            case 3:
                tambahKendaraan();
                break;

            case 4:
                lihatProgressKendaraan();
                break;

            case 5:
                printf("Terima kasih! Program selesai.\n");
                exit(0);

            default:
                printf("Pilihan tidak valid. Silakan coba lagi.\n");
        }
    }

    return 0;
}
